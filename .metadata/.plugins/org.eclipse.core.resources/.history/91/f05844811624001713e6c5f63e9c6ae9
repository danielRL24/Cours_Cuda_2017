#include <iostream>

#include "MontecarloMultiGPU.h"
#include "Montecarlo.h"
#include "Device.h"
#include <curand_kernel.h>

using std::cout;
using std::endl;
/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			Implementation 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

MontecarloMultiGPU::MontecarloMultiGPU(const Grid& grid, float m, long n) :
	 grid(grid), m(m), n(n)
    {
	this->nx = 0;
	this->piHat = 0;
    }

MontecarloMultiGPU::~MontecarloMultiGPU()
    {

    }

void MontecarloMultiGPU::run()
    {
	int nbDevice = Device::getDeviceCount();
	int tmpNx = 0;

	for(int deviceID = 0; deviceID < nbDevice; deviceID++)
	    {
		setDevice(deviceID);
		Montecarlo montecarlo (grid, m, n);
		tmpNx =
	    }
    }

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/

