#include "Indice2D.h"
#include "cudaTools.h"
#include <stdio.h>


/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

__global__ void histogramme(int* ptrDevTabData, int *ptrDevTabResult, int tabSize);

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

static __device__ void reductionIntraThread(int *ptrDevTabData, int tabSize, int *tabSM);
static __device__ void reductionInterBlock(int* tabSM, int* ptrDevTabResult);

/*----------------------------------------------------------------------*\
 |*			Implementation 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

__global__ void histogramme(int* ptrDevTabData, int *ptrDevTabResult, int tabSize);
{
	extern __shared__ int tabSM[];

	// init 0
	if (Indice2D::tidLocal() == 0)
	{
		for (int i = 0; i < 256; i++)
		{
			tabSM[i] = 0;
		}
	}
	__syncthreads();

	reductionIntraThread(ptrDevTabData, tabSize, tabSM);

	__syncthreads();

	reductionInterBlock(tabSM, ptrDevTabResult)

}


/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

__device__ void reductionIntraThread(int *ptrDevTabData, int tabSize, int *tabSM)
{
	const int NB_THREAD = Indice2D::nbThread();
	const int TID_LOCAL = Indice2D::tidLocalBlock();
	const int TID = Indice2D::tid();

	int s = TID;

	while (s < tabSize)
	{
		atomicAdd(&tabSM[ptrDevTabData[s]], 1);
		s += NB_THREAD;
	}
}

__device__ void reductionInterBlock(int* tabSM, int* ptrDevResult)
    {
	if (Indice2D::tidLocal() == 0)
	{
		for (int i = 0; i < 256; i++)
		{
			atomicAdd(&ptrDevResult[i], tabSM[i]);
		}
	}
    }

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/

